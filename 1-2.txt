첫번째 시작 2회전

A =

 1,  0,  5
 2,  1,  6
 3,  4,  0

temp = 

 1,  6,  0
 4,  0,  0
 0,  0,  0

getCofactor (A, temp, 0(p), 1(q), 3(n))

i = 0, j = 0

For1 : 0 (int row = 0; row < 3(n); row++)
{
	For2 : 0 (int col = 0; col < 3(n); col++)
	{
		if (0(row) != 0(p) && 0(col) != 1(q))
		{
			false
		}
	}

	For2 : 1 (int col = 0; col < 3(n); col++)
	{
		if (0(row) != 0(p) && 1(col) != 1(q))
		{
			false
		}
	}

	For2 : 2 (int col = 0; col < 3(n); col++)
	{
		if (0(row) != 0(p) && 2(col) != 1(q))
		{
			false
		}
	}
}

For1 : 1 (int row = 0; row < 3(n); row++)
{
	For2 : 0 (int col = 0; col < 3(n); col++)
	{
		if (1(row) != 0(p) && 0(col) != 1(q))
		{
			temp.[0(i)][0(j++) 공식 이후 1] = A.matrixdata[1(row)][1(col)]
			{
	      			 1,  0,  5	(1), 6,  0
				(2), 1,  6   ->  4,  0,  0  ->
 				 3,  4,  0	 0,  0,  0 

				 2,  6,  0	 1,   0,  5
 				 4,  0,  0   =  (2),  1,  6
 				 0,  0,  0	 3,   4,  0
			} 이제 j = 1

			if (1(j) == 3(n) - 1 -> 2(n)) = (1(j) == 2(n))
			{
				false
			}
		}
	}

	For2 : 1 (int col = 0; col < 3(n); col++)
	{
		if (1(row) != 0(p) && 1(col) != 1(q))
		{
			false
		}
	}

	For2 : 2 (int col = 0; col < 3(n); col++)
	{
		if (1(row) != 0(p) && 2(col) != 1(q))
		{
			temp.[0(i)][1(j++) 공식 이후 2] = A.matrixdata[1(row)][2(col)]
			{
	      			 1,  0,  5	 2, (6), 0
				 2,  1, (6)  ->  4,  0,  0  ->
 				 3,  4,  0	 0,  0,  0 

				 2,  6,  0	 1,   0,  5
 				 4,  0,  0   =  (2),  1, (6)
 				 0,  0,  0	 3,   4,  0
			} 이제 j = 2

			if (2(j) == 3(n) - 1 -> 2(n)) = (2(j) == 2(n))
			{		
				2(j) = 0 -> 0(j)
				0(i)++ -> 1(i)
			}
		}
	}
}

For1 : 2 (int row = 0; row < 3(n); row++)
{
	For2 : 0 (int col = 0; col < 3(n); col++)
	{
		if (2(row) != 0(p) && 0(col) != 1(q))
		{		
			temp.[1(i)][0(j++) 공식 이후 1] = A.matrixdata[2(row)][0(col)]
			{
	      			 1,  0,  5	 2,  6,  0
				 2,  1,  6  ->  (4), 0,  0  ->
 				(3), 4,  0	 0,  0,  0 

				 2,  6,  0	 1,   0,  5
 				 3,  0,  0   =  (2),  1, (6)
 				 0,  0,  0	(3),  4,  0
			} 이제 j = 1

			if (1(j) == 3(n) - 1 -> 2(n)) = (1(j) == 2(n))
			{		
				false
			}
		}
	}

	For2 : 1 (int col = 0; col < 3(n); col++)
	{
		if (2(row) != 0(p) && 1(col) != 1(q))
		{
			false
		}
	}

	For2 : 2 (int col = 0; col < 3(n); col++)
	{
		if (2(row) != 0(p) && 2(col) != 1(q))
		{
			temp.[1(i)][1(j++) 공식 이후 2] = A.matrixdata[2(row)][2(col)]
			{
	      			 1,  0,  5	 2,  6,  0
				 2,  1,  6  ->   3, (0), 0  ->
 				 3,  4, (0)	 0,  0,  0 

				 2,  6,  0	 1,   0,  5
 				 3,  0,  0   =  (2),  1, (6)
 				 0,  0,  0	(3),  4, (0)
			} 이제 j = 2

			if (2(j) == 3(n) - 1 -> 2(n)) = (2(j) == 2(n))
			{		
				2(j) = 0 -> 0(j)
				0(i)++ -> 1(i)
			}
		}
	}
}

new Temp = 

2,  6,  0
3,  0,  0
0,  0,  0